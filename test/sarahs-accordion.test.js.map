{"version":3,"file":"sarahs-accordion.test.js","sourceRoot":"","sources":["../src/test/sarahs-accordion.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,eAAe,MAAM,6BAA6B,CAAC;AAE1D,KAAK,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC7B,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QACtD,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAkB,IAAI,CAAA,uCAAuC,CAAC,CAAC;QACvF,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;;OAKC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,MAAM,OAAO,CACtB,IAAI,CAAA,4DAA4D,CACjE,CAAC;QACF,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;;OAKC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAkB,IAAI,CAAA;;;;KAI7C,CAAC,CAAC;QACH,MAAM,WAAW,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,MAAM,CAAE,CAAC,aAAa,EAAE,CAAC;QAC1E,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAkB,IAAI,CAAA,uCAAuC,CAAC,CAAC;QACvF,MAAM,OAAO,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,SAAS,CAAE,CAAC;QACzD,MAAM,OAAO,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,SAAS,CAAE,CAAC;QAEzD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAC;QAEnE,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,uCAAuC,CAAC,CAAC;QAErE,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,+CAA+C,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert, fixture } from '@open-wc/testing';\nimport { html } from 'lit/static-html.js';\nimport SarahsAccordion from '../stories/sarahs-accordion';\n\nsuite('sarahs-accordion', () => {\n  test('is defined', () => {\n    const el = document.createElement('sarahs-accordion');\n    assert.instanceOf(el, SarahsAccordion);\n  });\n\n  test('renders with default title', async () => {\n    const el = await fixture<SarahsAccordion>(html`<sarahs-accordion></sarahs-accordion>`);\n    assert.shadowDom.equal(\n      el,\n      `\n      <details>\n        <summary>Accordion Title</summary>\n        <slot></slot>\n      </details>\n      `\n    );\n  });\n\n  test('renders with a custom title', async () => {\n    const el = await fixture<SarahsAccordion>(\n      html`<sarahs-accordion title=\"Custom Title\"></sarahs-accordion>`\n    );\n    assert.shadowDom.equal(\n      el,\n      `\n      <details>\n        <summary>Custom Title</summary>\n        <slot></slot>\n      </details>\n      `\n    );\n  });\n\n  test('displays slot content', async () => {\n    const el = await fixture<SarahsAccordion>(html`\n      <sarahs-accordion>\n        <p>Accordion content</p>\n      </sarahs-accordion>\n    `);\n    const slotContent = el.shadowRoot!.querySelector('slot')!.assignedNodes();\n    assert.equal(slotContent[0].textContent, 'Accordion content');\n  });\n\n  test('toggles open and closed state', async () => {\n    const el = await fixture<SarahsAccordion>(html`<sarahs-accordion></sarahs-accordion>`);\n    const details = el.shadowRoot!.querySelector('details')!;\n    const summary = el.shadowRoot!.querySelector('summary')!;\n\n    assert.isFalse(details.open, 'Details should be closed initially');\n\n    summary.click();\n    await el.updateComplete;\n    assert.isTrue(details.open, 'Details should be open after clicking');\n\n    summary.click();\n    await el.updateComplete;\n    assert.isFalse(details.open, 'Details should be closed after clicking again');\n  });\n});\n"]}